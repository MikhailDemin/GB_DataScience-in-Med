# 3.	Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо
# только числами. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами
# выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. Во время ввода
# пользователем # очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если
# введено число. # Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
# соответствующее сообщение. При этом работа скрипта не должна завершаться.
# my solution ####
class OnlyNum(Exception):

    def __init__(self, *_):
        self.user_list = []

    def check(self):
        while True:
            put = input('enter numbers or q to finish - ')
            for num in put:
                if num.isdigit():
                    self.user_list.append(int(num))
                    print(f"Your list: {self.user_list}")
                else:
                    try:
                        if not num.isdigit():
                            raise OnlyNum("Enter only numbers please!!!")
                    except OnlyNum as error:
                        print(error)
            if put == 'q':
                print(f"Final list: {self.user_list}")
                break


OnlyNum().check()
