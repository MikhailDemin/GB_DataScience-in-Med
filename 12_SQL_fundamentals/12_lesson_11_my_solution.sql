-- 12_lesson_11_my_solution

-- Практическое задание по теме “Оптимизация запросов”

/*
 1.	Создайте таблицу logs типа Archive. Пусть при каждом создании записи в таблицах users, catalogs 
и products в таблицу logs помещается время и дата создания записи, название таблицы, идентификатор 
первичного ключа и содержимое поля name.*/
-- **************************************************************************************************************
DROP TABLE IF EXISTS insert_transaction_log;
CREATE TABLE insert_transaction_log (
	created_at DATETIME NOT NULL,
	table_name VARCHAR(100),
	string_id BIGINT NOT NULL,
	name_value VARCHAR(100) NOT NULL	
) ENGINE = ARCHIVE;


DROP TRIGGER IF EXISTS users_log;
DELIMITER &&

CREATE TRIGGER users_log AFTER INSERT ON users
FOR EACH ROW
BEGIN
	INSERT INTO insert_transaction_log (created_at, table_name, string_id, name_value)
	VALUES (NOW(), 'users', NEW.id, NEW.name);
END &&
DELIMITER ;

DROP TRIGGER IF EXISTS catalogs_log;
DELIMITER &&

CREATE TRIGGER catalogs_log AFTER INSERT ON catalogs
FOR EACH ROW
BEGIN
	INSERT INTO insert_transaction_log (created_at, table_name, string_id, name_value)
	VALUES (NOW(), 'catalogs', NEW.id, NEW.name);
END &&
DELIMITER ;

DROP TRIGGER IF EXISTS products_log;
DELIMITER &&

CREATE TRIGGER products_log AFTER INSERT ON products
FOR EACH ROW
BEGIN
	INSERT INTO insert_transaction_log (created_at, table_name, string_id, name_value)
	VALUES (NOW(), 'products', NEW.id, NEW.name);
END &&
DELIMITER ;

INSERT INTO users (name, birthday_at) 
VALUES ('Пётр', '1995-04-12');
SELECT * FROM users;

/*
|id |name     |birthday_at|created_at         |updated_at         |
|---|---------|-----------|-------------------|-------------------|
|2  |Наталья  |1984-11-12 |2022-04-10 16:51:09|2022-04-10 16:51:09|
|3  |Александр|1985-05-20 |2022-04-10 16:51:09|2022-04-10 16:51:09|
|4  |Сергей   |1988-02-14 |2022-04-10 16:51:09|2022-04-10 16:51:09|
|5  |Иван     |1998-01-12 |2022-04-10 16:51:09|2022-04-10 16:51:09|
|6  |Мария    |1992-08-29 |2022-04-10 16:51:09|2022-04-10 16:51:09|
|12 |Пётр     |1995-04-12 |2022-05-24 08:23:10|2022-05-24 08:23:10|

*/

INSERT INTO products (name, description, price, catalog_id) 
VALUES ('Intel Core i7-12600KF', 'Процессор для ПК на платформе Intel.', '43000', '1');
SELECT * FROM products;

/*
|id |name                   |description                                                                      |price |catalog_id|created_at         |updated_at         |
|---|-----------------------|---------------------------------------------------------------------------------|------|----------|-------------------|-------------------|
|1  |Intel Core i3-8100     |Процессор для настольных персональных компьютеров, основанных на платформе Intel.|7 890 |1         |2022-04-22 15:50:31|2022-04-22 15:50:31|
|2  |Intel Core i5-7400     |Процессор для настольных персональных компьютеров, основанных на платформе Intel.|12 700|1         |2022-04-22 15:50:31|2022-04-22 15:50:31|
|3  |AMD FX-8320E           |Процессор для настольных персональных компьютеров, основанных на платформе AMD.  |4 780 |1         |2022-04-22 15:50:31|2022-04-22 15:50:31|
|4  |AMD FX-8320            |Процессор для настольных персональных компьютеров, основанных на платформе AMD.  |7 120 |1         |2022-04-22 15:50:31|2022-04-22 15:50:31|
|5  |ASUS ROG MAXIMUS X HERO|Материнская плата ASUS ROG MAXIMUS X HERO, Z370, Socket 1151-V2, DDR4, ATX       |19 310|2         |2022-04-22 15:50:31|2022-04-22 15:50:31|
|6  |Gigabyte H310M S2H     |Материнская плата Gigabyte H310M S2H, H310, Socket 1151-V2, DDR4, mATX           |4 790 |2         |2022-04-22 15:50:31|2022-04-22 15:50:31|
|7  |MSI B250M GAMING PRO   |Материнская плата MSI B250M GAMING PRO, B250, Socket 1151, DDR4, mATX            |5 060 |2         |2022-04-22 15:50:31|2022-04-22 15:50:31|
|8  |Intel Core i7-12700K   |                                                                                 |      |          |2022-04-22 15:50:57|2022-04-22 15:50:57|
|9  |                       |Материнская плата ASUS ROG MAXIMUS X HERO, Z370, Socket 1151-V2, DDR4, ATX       |      |          |2022-04-22 15:50:57|2022-04-22 15:50:57|
|10 |Intel Core i7-12600KF  |Процессор для ПК на платформе Intel.                                             |43 000|1         |2022-05-24 08:28:17|2022-05-24 08:28:17|
 */

INSERT INTO catalogs (name) 
VALUES ('Блоки питания');
SELECT * FROM catalogs;

/*
|id |name              |
|---|------------------|
|1  |Процессоры        |
|2  |Материнские платы |
|3  |Видеокарты        |
|4  |Жесткие диски     |
|5  |Оперативная память|
|6  |Блоки питания     |
*/

SELECT * FROM insert_transaction_log;

/*
|created_at         |table_name|string_id|name_value           |
|-------------------|----------|---------|---------------------|
|2022-05-24 08:23:10|users     |12       |Пётр                 |
|2022-05-24 08:28:17|products  |10       |Intel Core i7-12600KF|
|2022-05-24 08:30:22|catalogs  |6        |Блоки питания        |
*/

-- 2*.	Создайте SQL-запрос, который помещает в таблицу users миллион записей.
-- **************************************************************************************************************
-- Добавление 1 миллиона записей займет очень много времени, добавим 1000.

DROP PROCEDURE IF EXISTS insert_users_generator;

DELIMITER $$

CREATE PROCEDURE insert_users_generator ()
BEGIN
	DECLARE i INT DEFAULT 100000;
	DECLARE j INT DEFAULT 0;
	WHILE i > 0 DO
		INSERT INTO users(name, birthday_at) VALUES (CONCAT('user_', j), NOW());
		SET j = j + 1;
		SET i = i - 1;
	END WHILE;
END $$

DELIMITER ;

SET PROFILING=1;
set profiling_history_size=100;

CALL insert_users_generator();

SELECT * FROM users
ORDER BY id
LIMIT 15;

/*
|id |name     |birthday_at|created_at         |updated_at         |
|---|---------|-----------|-------------------|-------------------|
|2  |Наталья  |1984-11-12 |2022-04-10 16:51:09|2022-04-10 16:51:09|
|3  |Александр|1985-05-20 |2022-04-10 16:51:09|2022-04-10 16:51:09|
|4  |Сергей   |1988-02-14 |2022-04-10 16:51:09|2022-04-10 16:51:09|
|5  |Иван     |1998-01-12 |2022-04-10 16:51:09|2022-04-10 16:51:09|
|6  |Мария    |1992-08-29 |2022-04-10 16:51:09|2022-04-10 16:51:09|
|12 |Пётр     |1995-04-12 |2022-05-24 08:23:10|2022-05-24 08:23:10|
|13 |user_0   |2022-05-24 |2022-05-24 10:20:38|2022-05-24 10:20:38|
|14 |user_1   |2022-05-24 |2022-05-24 10:20:38|2022-05-24 10:20:38|
|15 |user_2   |2022-05-24 |2022-05-24 10:20:38|2022-05-24 10:20:38|
|16 |user_3   |2022-05-24 |2022-05-24 10:20:38|2022-05-24 10:20:38|
|17 |user_4   |2022-05-24 |2022-05-24 10:20:38|2022-05-24 10:20:38|
|18 |user_5   |2022-05-24 |2022-05-24 10:20:38|2022-05-24 10:20:38|
|19 |user_6   |2022-05-24 |2022-05-24 10:20:38|2022-05-24 10:20:38|
|20 |user_7   |2022-05-24 |2022-05-24 10:20:38|2022-05-24 10:20:38|
|21 |user_8   |2022-05-24 |2022-05-24 10:20:38|2022-05-24 10:20:38|

*/

SELECT * FROM users
ORDER BY id DESC 
LIMIT 10;

/*
|id     |name      |birthday_at|created_at         |updated_at         |
|-------|----------|-----------|-------------------|-------------------|
|101 012|user_99999|2022-05-24 |2022-05-24 14:50:17|2022-05-24 14:50:17|
|101 011|user_99998|2022-05-24 |2022-05-24 14:50:17|2022-05-24 14:50:17|
|101 010|user_99997|2022-05-24 |2022-05-24 14:50:17|2022-05-24 14:50:17|
|101 009|user_99996|2022-05-24 |2022-05-24 14:50:17|2022-05-24 14:50:17|
|101 008|user_99995|2022-05-24 |2022-05-24 14:50:17|2022-05-24 14:50:17|
|101 007|user_99994|2022-05-24 |2022-05-24 14:50:17|2022-05-24 14:50:17|
|101 006|user_99993|2022-05-24 |2022-05-24 14:50:17|2022-05-24 14:50:17|
|101 005|user_99992|2022-05-24 |2022-05-24 14:50:17|2022-05-24 14:50:17|
|101 004|user_99991|2022-05-24 |2022-05-24 14:50:17|2022-05-24 14:50:17|
|101 003|user_99990|2022-05-24 |2022-05-24 14:50:17|2022-05-24 14:50:17|

*/

SHOW profiles;

-- EXPLAIN CALL insert_users_generator();


-- \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
-- *Практическое задание по теме “NoSQL"

-- 1*.	В базе данных Redis подберите коллекцию для подсчета посещений с определенных IP-адресов..
-- **************************************************************************************************************


/*
2*.	При помощи базы данных Redis решите задачу поиска имени пользователя по электронному 
адресу и наоборот, поиск электронного адреса пользователя по его имени.*/
-- **************************************************************************************************************



-- 3*.	Организуйте хранение категорий и товарных позиций учебной базы данных shop в СУБД MongoDB.
-- **************************************************************************************************************


/*
Комментарии преподавателя:
--------------------------------------
Кирилл Иванов・Преподаватель
